{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for Easy DEVS.",
        "title": "Easy DEVS API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/ai/generate-diagram": {
            "post": {
                "description": "Sends a prompt to OpenAI to generate a diagram in JSON format based on a strict schema.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Generate a diagram",
                "parameters": [
                    {
                        "description": "Data required to generate a diagram",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateDiagramRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated diagram",
                        "schema": {
                            "$ref": "#/definitions/response.DiagramResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "AI processing error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ai/generate-model": {
            "post": {
                "description": "Sends a prompt to OpenAI to generate a DEVS model code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Generate a model",
                "parameters": [
                    {
                        "description": "Data required to generate a model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GenerateModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated model code",
                        "schema": {
                            "$ref": "#/definitions/response.GeneratedModelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "AI processing error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Logs in a user with the provided identity (email or username) and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logs out a user by invalidating the refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log out a user",
                "parameters": [
                    {
                        "description": "Logout Request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "description": "Returns the authenticated user's information based on the access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refreshes the access token using a valid refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh Request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user with the provided username, email, and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/diagram": {
            "get": {
                "description": "Retrieve a list of all diagrams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagrams"
                ],
                "summary": "Get all diagrams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Diagram"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new diagram entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagrams"
                ],
                "summary": "Create a diagram",
                "parameters": [
                    {
                        "description": "Diagram data",
                        "name": "diagram",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DiagramRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Diagram"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/diagram/{id}": {
            "get": {
                "description": "Retrieve a single diagram by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagrams"
                ],
                "summary": "Get a diagram by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Diagram ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Diagram"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a diagram by its ID",
                "tags": [
                    "diagrams"
                ],
                "summary": "Delete a diagram",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Diagram ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing diagram with partial data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagrams"
                ],
                "summary": "Update a diagram",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Diagram ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DiagramRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Diagram"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the status of the API to confirm it is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "API health check",
                "responses": {
                    "200": {
                        "description": "API is running",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/library": {
            "get": {
                "description": "Retrieve a list of all libraries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries"
                ],
                "summary": "Get all libraries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Library"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new library entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries"
                ],
                "summary": "Create a library",
                "parameters": [
                    {
                        "description": "Library data",
                        "name": "library",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LibraryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Library"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/library/{id}": {
            "get": {
                "description": "Retrieve a single library by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries"
                ],
                "summary": "Get a library by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Library ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Library"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a library by its ID",
                "tags": [
                    "libraries"
                ],
                "summary": "Delete a library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Library ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing library with partial data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries"
                ],
                "summary": "Update a library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Library ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LibraryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Library"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/model": {
            "get": {
                "description": "Retrieve a list of all models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Get all models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/response.ModelResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new model entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Create a model",
                "parameters": [
                    {
                        "description": "Model data",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ModelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.ModelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/model/{id}": {
            "get": {
                "description": "Retrieve a single model by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Get a model by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ModelResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a model by its ID",
                "tags": [
                    "models"
                ],
                "summary": "Delete a model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing model with partial data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Update a model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ModelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/model/{id}/recursive": {
            "get": {
                "description": "Retrieve a single model by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Get a model by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ModelResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/model/{id}/simulate": {
            "get": {
                "description": "generateSimulationFile generate a zip that will contain all infromations for simulation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Generate simulations files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Retrieve a list of all user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Retrieve a single user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing user by their ID",
                "tags": [
                    "user"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User password confirmation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing user with partial data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial user update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/workspace": {
            "get": {
                "description": "Retrieve a list of all workspace",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get all workspace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Workspace"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new workspace and store it in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Create a new workspace",
                "parameters": [
                    {
                        "description": "Workspace object",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Workspace"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/workspace/{id}": {
            "get": {
                "description": "Retrieve a single workspace by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get a workspace by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Workspace"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing workspace by its ID",
                "tags": [
                    "workspace"
                ],
                "summary": "Delete a workspace by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing workspace with partial data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Update a workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial workspace update",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Workspace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enum.ModelPortDirection": {
            "type": "string",
            "enum": [
                "in",
                "out"
            ],
            "x-enum-varnames": [
                "ModelPortDirectionIn",
                "ModelPortDirectionOut"
            ]
        },
        "enum.ModelType": {
            "type": "string",
            "enum": [
                "atomic",
                "coupled"
            ],
            "x-enum-varnames": [
                "Atomic",
                "Coupled"
            ]
        },
        "json.ModelColors": {
            "type": "object",
            "properties": {
                "bodyBackgroundColor": {
                    "type": "string"
                },
                "headerBackgroundColor": {
                    "type": "string"
                },
                "headerTextColor": {
                    "type": "string"
                }
            }
        },
        "json.ModelComponent": {
            "type": "object",
            "required": [
                "instanceId",
                "modelId"
            ],
            "properties": {
                "instanceId": {
                    "type": "string"
                },
                "instanceMetadata": {
                    "$ref": "#/definitions/json.ModelMetadata"
                },
                "modelId": {
                    "type": "string"
                }
            }
        },
        "json.ModelConnection": {
            "type": "object",
            "required": [
                "from",
                "to"
            ],
            "properties": {
                "from": {
                    "$ref": "#/definitions/json.ModelLink"
                },
                "to": {
                    "$ref": "#/definitions/json.ModelLink"
                }
            }
        },
        "json.ModelLink": {
            "type": "object",
            "required": [
                "instanceId",
                "port"
            ],
            "properties": {
                "instanceId": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "json.ModelMetadata": {
            "type": "object",
            "required": [
                "position",
                "style"
            ],
            "properties": {
                "alwaysShowExtraInfo": {
                    "type": "boolean"
                },
                "alwaysShowToolbar": {
                    "type": "boolean"
                },
                "backgroundColor": {
                    "type": "string"
                },
                "modelColors": {
                    "$ref": "#/definitions/json.ModelColors"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelParameter"
                    }
                },
                "position": {
                    "$ref": "#/definitions/json.ModelPosition"
                },
                "style": {
                    "$ref": "#/definitions/json.ModelStyle"
                },
                "toolbarPosition": {
                    "$ref": "#/definitions/json.ToolbarPosition"
                },
                "toolbarVisible": {
                    "type": "boolean"
                }
            }
        },
        "json.ModelParameter": {
            "type": "object",
            "required": [
                "name",
                "type",
                "value"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/json.ParameterType"
                },
                "value": {}
            }
        },
        "json.ModelPort": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enum.ModelPortDirection"
                }
            }
        },
        "json.ModelPosition": {
            "type": "object",
            "required": [
                "x",
                "y"
            ],
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "json.ModelStyle": {
            "type": "object",
            "required": [
                "height",
                "width"
            ],
            "properties": {
                "height": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "json.ParameterType": {
            "type": "string",
            "enum": [
                "int",
                "float",
                "bool",
                "string",
                "object"
            ],
            "x-enum-varnames": [
                "ParameterTypeInt",
                "ParameterTypeFloat",
                "ParameterTypeBool",
                "ParameterTypeString",
                "ParameterTypeObject"
            ]
        },
        "json.ToolbarPosition": {
            "type": "string",
            "enum": [
                "top",
                "left",
                "right",
                "bottom"
            ],
            "x-enum-varnames": [
                "ToolbarPositionTop",
                "ToolbarPositionLeft",
                "ToolbarPositionRight",
                "ToolbarPositionBottom"
            ]
        },
        "model.Diagram": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modelId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        },
        "model.Library": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Model"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.Model": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelComponent"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelConnection"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "libId": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/json.ModelMetadata"
                },
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelPort"
                    }
                },
                "type": {
                    "$ref": "#/definitions/enum.ModelType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "libraries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Library"
                    }
                },
                "modelTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Model"
                    }
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                },
                "refresh_token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Workspace"
                    }
                }
            }
        },
        "model.Workspace": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diagrams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Diagram"
                    }
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "request.DiagramRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "workspaceId"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        },
        "request.GenerateDiagramRequest": {
            "type": "object"
        },
        "request.GenerateModelRequest": {
            "type": "object",
            "required": [
                "modelName",
                "modelType",
                "previousModelsCode",
                "userPrompt"
            ],
            "properties": {
                "modelName": {
                    "type": "string",
                    "example": "MyModel"
                },
                "modelType": {
                    "type": "string",
                    "example": "DEVS"
                },
                "previousModelsCode": {
                    "type": "string",
                    "example": "Existing model code"
                },
                "userPrompt": {
                    "type": "string",
                    "example": "Generate a model based on the previous code"
                }
            }
        },
        "request.LibraryRequest": {
            "type": "object",
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "identity",
                "password"
            ],
            "properties": {
                "identity": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.LogoutRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "request.ModelRequest": {
            "type": "object",
            "required": [
                "code",
                "components",
                "connections",
                "description",
                "metadata",
                "name",
                "ports",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelComponent"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelConnection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "libId": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/json.ModelMetadata"
                },
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelPort"
                    }
                },
                "type": {
                    "$ref": "#/definitions/enum.ModelType"
                }
            }
        },
        "request.PasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "request.PastMessages": {
            "type": "object",
            "required": [
                "content",
                "role"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "request.RefreshRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "request.UpdateUserRequest": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "names": {
                    "type": "string"
                }
            }
        },
        "request.WorkspaceRequest": {
            "type": "object",
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.Connection": {
            "type": "object",
            "required": [
                "from",
                "to"
            ],
            "properties": {
                "from": {
                    "description": "obligatoire",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Endpoint"
                        }
                    ]
                },
                "to": {
                    "description": "obligatoire",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Endpoint"
                        }
                    ]
                }
            }
        },
        "response.DiagramResponse": {
            "type": "object",
            "required": [
                "connections",
                "models"
            ],
            "properties": {
                "connections": {
                    "description": "obligatoire",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Connection"
                    }
                },
                "models": {
                    "description": "obligatoire",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Model"
                    }
                }
            }
        },
        "response.Endpoint": {
            "type": "object",
            "required": [
                "model",
                "port"
            ],
            "properties": {
                "model": {
                    "description": "obligatoire",
                    "type": "string"
                },
                "port": {
                    "description": "obligatoire",
                    "type": "string"
                }
            }
        },
        "response.GeneratedModelResponse": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "required": [
                "accessToken",
                "email",
                "refreshToken",
                "username"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.Model": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "components": {
                    "description": "optionnel",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "obligatoire",
                    "type": "string"
                },
                "ports": {
                    "description": "optionnel",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Ports"
                        }
                    ]
                },
                "type": {
                    "description": "enum obligatoire",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ModelType"
                        }
                    ]
                }
            }
        },
        "response.ModelResponse": {
            "type": "object",
            "required": [
                "code",
                "components",
                "connections",
                "description",
                "metadata",
                "name",
                "ports",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelComponent"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelConnection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "libId": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/json.ModelMetadata"
                },
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/json.ModelPort"
                    }
                },
                "type": {
                    "$ref": "#/definitions/enum.ModelType"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "response.ModelType": {
            "type": "string",
            "enum": [
                "atomic",
                "coupled"
            ],
            "x-enum-varnames": [
                "ModelTypeAtomic",
                "ModelTypeCoupled"
            ]
        },
        "response.Ports": {
            "type": "object",
            "properties": {
                "in": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "out": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.RefreshResponse": {
            "type": "object",
            "required": [
                "accessToken"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "response.RegisterResponse": {
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken",
                "user"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/response.UserResponse"
                }
            }
        },
        "response.UserResponse": {
            "type": "object",
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}